// Code generated by mockery v2.42.2. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	user "user-management-service/repository/user"
)

// IRegistry is an autogenerated mock type for the IRegistry type
type IRegistry struct {
	mock.Mock
}

// GetUserRepository provides a mock function with given fields:
func (_m *IRegistry) GetUserRepository() user.IUserRepository {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetUserRepository")
	}

	var r0 user.IUserRepository
	if rf, ok := ret.Get(0).(func() user.IUserRepository); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(user.IUserRepository)
		}
	}

	return r0
}

// NewIRegistry creates a new instance of IRegistry. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIRegistry(t interface {
	mock.TestingT
	Cleanup(func())
}) *IRegistry {
	mock := &IRegistry{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
